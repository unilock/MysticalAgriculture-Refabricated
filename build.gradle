plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

base {
	archivesName = project.archives_base_name
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

fabricApi {
	configureDataGeneration()
}

loom {
	accessWidenerPath = file("src/main/resources/mysticalagriculture.accesswidener")

	mods {
		"mysticalagriculture" {
			sourceSet sourceSets.main
		}
	}
}

repositories {
	mavenLocal()

	maven {
		name = "BlameJared"
		url = "https://maven.blamejared.com/"
	}

	maven {
		name = "Draylar"
		url = "https://maven.draylar.dev/releases/"
	}

	maven {
		name = "JamiesWhiteShirt"
		url = "https://maven.jamieswhiteshirt.com/libs-release/"
	}

	maven {
		name = "Shedaniel"
		url = "https://maven.shedaniel.me/"
	}

	maven {
		name = "vram"
		url = "https://maven.vram.io/"
	}

	maven {
		name = "DevOS"
		url = "https://mvn.devos.one/releases/"
	}

	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}

	maven {
		name = "Curse"
		url = "https://www.cursemaven.com/"
	}

	maven {
		name = "Jitpack"
		url = "https://jitpack.io/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	if (project.runtime_itemlist_mod == "jei") {
		modRuntimeOnly "mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}"
	} else if (project.runtime_itemlist_mod == "rei") {
		modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
	} else {
		throw new GradleException("Invalid runtime_itemlist_mod value: " + project.runtime_itemlist_mod)
	}

	modCompileOnlyApi "mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}"
	modCompileOnlyApi "mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}"
	modCompileOnlyApi "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"

	modImplementation include("dev.draylar:magna:${project.magna_version}")
	modImplementation "curse.maven:jade-324717:${project.jade_version}"
	modImplementation "com.alex.cucumber:Cucumber-Refabricated:${project.cucumber_version}"

	modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.forgeconfigapiport_version}"
	implementation "com.electronwill.night-config:core:${project.nightconfig_version}"
	implementation "com.electronwill.night-config:toml:${project.nightconfig_version}"

	modImplementation include("io.github.fabricators_of_create.Porting-Lib:base:${project.portinglib_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
